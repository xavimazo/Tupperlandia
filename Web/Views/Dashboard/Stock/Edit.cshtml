@model Tupperware_e_commerce.Models.StockViewModel
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
<div class="container wrapper">
    <div class="row">
        <form class="col s12" action="/Stock/Edit" method="post">
            <br />
            @Html.HiddenFor(x => x.Stock.StockId)
            <div class="row">
                <div class="col s3">
                    @Html.LabelFor(x => x.Stock.ProductId)
                    @Html.DropDownListFor(x => x.Stock.Product.ProductId, Model.Products.Select(p => new SelectListItem { Value = p.ProductId.ToString(), Text = p.ProductName }), new { @class = "browser-default" })
                </div>
                <div class="col s3">
                    @Html.LabelFor(x => x.Stock.Capacity.CapacityId)
                    @Html.DropDownListFor(x => x.Stock.Capacity.CapacityId, Model.Capacities.Select(p => new SelectListItem { Value = p.CapacityId.ToString(), Text = p.CapacityDescription }), new { @class = "browser-default" })
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Color)
                    @Html.LabelFor(x => x.Stock.Color)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Weight)
                    @Html.LabelFor(x => x.Stock.Weight)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Lenght)
                    @Html.LabelFor(x => x.Stock.Lenght)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Width)
                    @Html.LabelFor(x => x.Stock.Width)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Height)
                    @Html.LabelFor(x => x.Stock.Height)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Diameter)
                    @Html.LabelFor(x => x.Stock.Diameter)
                </div>
                <div class="col s3">
                    @Html.LabelFor(x => x.Stock.Categorie.CategorieId)
                    @Html.DropDownListFor(x => x.Stock.Categorie.CategorieId, Model.Categories.Select(p => new SelectListItem { Value = p.CategorieId.ToString(), Text = p.CategorieDescription }), new { @class = "browser-default"})
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Line.LineDescription)
                    @Html.LabelFor(x => x.Stock.Line.LineDescription)
                </div>
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Price)
                    @Html.LabelFor(x => x.Stock.Price)
                </div>
                <div class="col s3">
                    @Html.LabelFor(x => x.Stock.StockStatus.StockStatusId)
                    @Html.DropDownListFor(x => x.Stock.StockStatus.StockStatusId, Model.StockStatus.Select(p => new SelectListItem { Value = p.StockStatusId.ToString(), Text = p.StockStatusDescription }), new { @class = "browser-default" })
                </div>
                @*<div class="col s3">
                     En caso que la publicacion tenga DESCUENTO, se muestra dropwdown DESCUENTO 
                    @if (Model.Stock.StockStatus.StockStatusDescription.Contains("Descuento") || Model.Stock.StockStatus != null)
                    {
                        @Html.LabelFor(x => x.Stock.DiscountId)
                        @Html.DropDownListFor(x => x.Stock.DiscountId, Model.Stock.Select(p => new SelectListItem { Value = p.DiscountId.ToString(), Text = p.DiscountDescription }), new { @class = "browser-default" })
                    }
                </div>*@
                <div class="input-field col s3">
                    @Html.EditorFor(x => x.Stock.Quantity)
                    @Html.LabelFor(x => x.Stock.Quantity)
                </div>
                <div class="input-field col s6">
                    @Html.EditorFor(x => x.Stock.Image)
                    @Html.LabelFor(x => x.Stock.Image)
                </div>
                <div class="input-field col s3">
                    <button type="submit" class="waves-effect waves-light btn col s6"><i class="material-icons left">mode_edit</i>Editar</button>
                </div>
            </div>
        </form>
    </div>
</div>